[{"/mnt/c/pr0/dapp_template_v2/src/index.js":"1","/mnt/c/pr0/dapp_template_v2/src/serviceWorker.js":"2","/mnt/c/pr0/dapp_template_v2/src/components/App.js":"3","/mnt/c/pr0/dapp_template_v2/src/components/Navbar.js":"4","/mnt/c/pr0/dapp_template_v2/src/store/selectors.js":"5","/mnt/c/pr0/dapp_template_v2/src/components/Main.js":"6","/mnt/c/pr0/dapp_template_v2/src/store/configureStore.js":"7","/mnt/c/pr0/dapp_template_v2/src/store/reducers.js":"8","/mnt/c/pr0/dapp_template_v2/src/store/interactions.js":"9","/mnt/c/pr0/dapp_template_v2/src/store/actions.js":"10"},{"size":628,"mtime":1608175785063,"results":"11","hashOfConfig":"12"},{"size":4951,"mtime":1602422327561,"results":"13","hashOfConfig":"12"},{"size":947,"mtime":1608292108516,"results":"14","hashOfConfig":"12"},{"size":4590,"mtime":1608292128674,"results":"15","hashOfConfig":"12"},{"size":671,"mtime":1608280931166,"results":"16","hashOfConfig":"12"},{"size":1583,"mtime":1608287727285,"results":"17","hashOfConfig":"12"},{"size":519,"mtime":1608169667661,"results":"18","hashOfConfig":"12"},{"size":789,"mtime":1608280187839,"results":"19","hashOfConfig":"12"},{"size":2552,"mtime":1608292063559,"results":"20","hashOfConfig":"12"},{"size":557,"mtime":1608280232650,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"ihwi6z",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/mnt/c/pr0/dapp_template_v2/src/index.js",[],["46","47"],"/mnt/c/pr0/dapp_template_v2/src/serviceWorker.js",[],"/mnt/c/pr0/dapp_template_v2/src/components/App.js",[],"/mnt/c/pr0/dapp_template_v2/src/components/Navbar.js",["48"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Identicon from 'identicon.js';\nimport eth from '../images/eth.png'\nimport {\n  accountSelector,\n  balanceSelector,\n  networkSelector,\n  web3Selector\n} from '../store/selectors'\nimport './Style.css';\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark rounded-bottom border-bottom border-danger\">\n        <a\n          className=\"navbar-brand bgDark3 rounded border border-danger\"\n          target=\"_blank\"\n          href=\"https://github.com/xternet/dapp_template_v2\">\n            DApp T3mplat3_v2\n        </a>\n          { this.props.account\n          ? <div className=\"collapse navbar-collapse\">\n              <ul className=\"navbar-nav ml-auto\">\n                <div className=\"container\">\n                  <div className=\"row\">\n                    <div className=\"border border-danger rounded bgDark4\" style={{ width: '125px' }}>\n                      <li className=\"nav-item text-white nav-link small\">\n                        <b>{this.props.network}</b>\n                      </li>\n                    </div>\n                    <div className=\"border border-danger rounded\" style={{ width: '125px' }}>\n                      <li className=\"nav-item text-white nav-link small bgDark5\">\n                        <b>{this.props.balance}</b>\n                        <img src={eth} width='18' height='18' alt=\"eth\" />\n                      </li>\n                    </div>\n                    <div className=\"border border-danger rounded\" style={{ width: '150px' }}>\n                      <li className=\"nav-item text-white nav-link small bgDark6\">\n                        { this.props.network === 'Main' || this.props.network === 'Private' || this.props.network === 'Wrong network'\n                        ? <b><a\n                            className=\"text-white\"\n                            href={`https://etherscan.io/address/` + this.props.account}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                          >\n                          {this.props.account.substring(0,6) + '...' + this.props.account.substring(38,42)}\n                          </a></b>\n                        : <b><a\n                            className=\"text-white\"\n                            href={`https://${this.props.network}.etherscan.io/address/` + this.props.account}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                          >\n                          {this.props.account.substring(0,6) + '...' + this.props.account.substring(38,42)}\n                          </a></b>\n                        }\n                        <img\n                          alt=\"id\"\n                          className=\"ml-2 id border border-danger\"\n                          width=\"20\"\n                          height=\"20\"\n                          src={`data:image/png;base64,${new Identicon(this.props.account, 30).toString()}`}\n                        />\n                      </li>\n                    </div>\n                  </div>\n                </div>\n              </ul>\n            </div>\n          : <div className=\"collapse navbar-collapse\">\n              <ul className=\"navbar-nav ml-auto\">\n                { this.props.web3\n                ? <button\n                    className=\"btn btn-success\"\n                    type=\"button\"\n                    onClick={async () => {\n                      try {\n                        await window.ethereum.enable()\n                      } catch (e) {\n                        console.log(e)\n                      }\n                    }}\n                  >\n                    Login\n                  </button>\n                : <button\n                    className=\"btn btn-warning\"\n                    type=\"button\"\n                    onClick={() => {\n                      try {\n                        window.open(\"https://metamask.io/\")\n                      } catch (e) {\n                        console.log(e)\n                      }\n                    }}\n                  >\n                    Get MetaMask\n                  </button>\n                }\n              </ul>\n            </div>\n          }\n      </nav>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    web3: web3Selector(state),\n    account: accountSelector(state),\n    network: networkSelector(state),\n    balance: balanceSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(Navbar)","/mnt/c/pr0/dapp_template_v2/src/store/selectors.js",[],"/mnt/c/pr0/dapp_template_v2/src/components/Main.js",["49"],"import React, { Component } from 'react'\nimport logo from '../images/logo.png';\nimport { connect } from 'react-redux'\nimport {\n  contractSelector\n} from '../store/selectors'\n\nclass Main extends Component {\n  componentWillMount() {\n    this.loadBlockchainData(this.props)\n  }\n\n  async loadBlockchainData(props) {\n    // const { dispatch, contract } = props\n  }\n\n  render() {\n    return (\n      <div className=\"Main\">\n        <div className=\"container-fluid mt-5\">\n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\n              <div className=\"content mr-auto ml-auto\">\n                <a\n                  href=\"http://www.dappuniversity.com/bootcamp\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                </a>\n                <h1>Dapp University</h1>\n                <h5>DApp Template_v2</h5>\n                <p>\n                  Edit <code>src/components/App.js</code> and save to reload.\n                </p>\n                <a\n                  className=\"App-link\"\n                  href=\"http://www.dappuniversity.com/bootcamp\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  LEARN BLOCKCHAIN <u><b>NOW! </b></u>\n                </a>\n              </div>\n            </main>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    // contract: contractSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(Main)","/mnt/c/pr0/dapp_template_v2/src/store/configureStore.js",[],"/mnt/c/pr0/dapp_template_v2/src/store/reducers.js",[],"/mnt/c/pr0/dapp_template_v2/src/store/interactions.js",["50","51"],"import Contract from '../backEnd/abis/Contract.json'\r\nimport Web3 from 'web3'\r\nimport {\r\n  web3Loaded,\r\n  contractLoaded,\r\n  web3NetworkLoaded,\r\n  web3AccountLoaded,\r\n  web3BalanceLoaded\r\n} from './actions'\r\n\r\nexport const loadWeb3 = async (dispatch) => {\r\n  try{\r\n    if(typeof window.ethereum!=='undefined'){\r\n      window.ethereum.autoRefreshOnNetworkChange = false;\r\n      const web3 = new Web3(window.ethereum)\r\n      dispatch(web3Loaded(web3))\r\n      return web3\r\n    }\r\n  } catch (e) {\r\n    console.log('Error, load Web3: ', e)\r\n  }\r\n}\r\n\r\nexport const loadNetwork = async (dispatch, web3) => {\r\n  try{\r\n    let network = await web3.eth.net.getNetworkType()\r\n    network = network.charAt(0).toUpperCase()+network.slice(1)\r\n    dispatch(web3NetworkLoaded(network))\r\n    return network\r\n  } catch (e) {\r\n    dispatch(web3NetworkLoaded('Wrong network'))\r\n    console.log('Error, load network: ', e)\r\n  }\r\n}\r\n\r\nexport const loadAccount = async (dispatch, web3) => {\r\n  try{\r\n    const accounts = await web3.eth.getAccounts()\r\n    const account = await accounts[0]\r\n    if(typeof account !== 'undefined'){\r\n      dispatch(web3AccountLoaded(account))\r\n      return account\r\n    }\r\n  } catch (e) {\r\n    console.log('Error, load account: ', e)\r\n  }\r\n}\r\n\r\nexport const loadBalance = async (dispatch, web3, account) => {\r\n  try {\r\n    // Ether balance in wallet\r\n    const etherBalance = await web3.eth.getBalance(account)\r\n    dispatch(web3BalanceLoaded((etherBalance/10**18).toFixed(5)))\r\n  } catch (e) {\r\n    console.log('Error, load balance: ', e)\r\n  }\r\n}\r\n\r\nexport const loadContract = async (dispatch, web3, netId) => {\r\n  try {\r\n    /**\r\n     * Alternaitve way of declaring contract\r\n     */\r\n    // const contractABI = []\r\n    // const contractAddress = ''\r\n    // const contract = new web3.eth.Contract(contractABI, contractAddress)\r\n    const contract = new web3.eth.Contract(Contract.abi, Contract.networks[netId].address)\r\n    dispatch(contractLoaded(contract))\r\n    return contract\r\n  } catch (e) {\r\n    console.log('Error, load contract: ', e)\r\n  }\r\n}\r\n\r\nexport const update = async (dispatch) => {\r\n  try{\r\n    let account, web3, network, netId, contract\r\n\r\n    web3 = await loadWeb3(dispatch)\r\n    account = await loadAccount(dispatch, web3)\r\n    network = await loadNetwork(dispatch, web3)\r\n  \r\n    netId = await web3.eth.net.getId()\r\n    contract = await loadContract(dispatch, web3, netId)\r\n  \r\n    if(account){\r\n      await loadBalance(dispatch, web3, account)\r\n    }\r\n  } catch (e) {\r\n    console.log('Error, update data: ', e)\r\n  }\r\n}","/mnt/c/pr0/dapp_template_v2/src/store/actions.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":19,"column":11,"nodeType":"58","endLine":19,"endColumn":26},{"ruleId":"59","severity":1,"message":"60","line":5,"column":3,"nodeType":"61","messageId":"62","endLine":5,"endColumn":19},{"ruleId":"59","severity":1,"message":"63","line":81,"column":5,"nodeType":"61","messageId":"62","endLine":81,"endColumn":12},{"ruleId":"59","severity":1,"message":"64","line":84,"column":5,"nodeType":"61","messageId":"62","endLine":84,"endColumn":13},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-unused-vars","'contractSelector' is defined but never used.","Identifier","unusedVar","'network' is assigned a value but never used.","'contract' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]